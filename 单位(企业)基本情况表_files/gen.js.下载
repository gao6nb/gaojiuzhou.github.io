/*
本函数使用说明
/*/
var confirm_lock="您是否确认正式提交？";
var confirm_temp="您是否确认保存此表格？以便您以后再次修改此表格！";

var confirm_continue="您是否希望保存表格，仍旧继续填写？";
var confirm_print="您当前打印的内容是非正式表格内容，您是否确认打印？";
var confirm_deleteline="您是否确认删除一行？";


var alert_lock="您还未完成所有表格的填写，暂时无法正式提交此表格！";
var alert_error="非法操作，请重新登陆!";
var alert_lock_enter="此表已正式提交，您无法再修改其内容！";
var alert_after_lock="您的表格已正式提交，您可以打印表格，作为正式纸张表格！"
var alert_befor_lock="您的表格没有完全填写完毕，表格中的必填内容不能为空！";

var afterdot=1;
var manualtd="#dddddd";		//定义系统自动产生的 单元格的 背景颜色

var g_allowJavascript=true;//是否 在提交前进行 JavaScript 非空+平衡 校验？ 

var savekxx="您所申报的可行性方案未正式提交，请及时提交，以保证申报成功！";
var submitkxx="注意：如果下次点击过保存则必须重新提交！";
/*
function FormatNumber(number,n){
//格式化数值输出 number表示数值 n表示你所需要的小数点后面几位 n>=0
// 笨函数 暂时无法 四舍五入
	var result;
	n=3;
	number=number+"";
	xx=number.split(".");
	if (isNaN(xx[1])){result=xx[0];}
	else{
		if (xx[1].length>n) {xx[1]=xx[1].substring(0,n);}
		if (xx[1]=="") {result=xx[0];}
			else {result=xx[0]+"."+xx[1];}
	}
	if (result=="NaN"){result="";}//如果得到的不是数值 则输出 空
	return result;
}
/*/

//http://www.chinabs.net/js/default.asp?infoid=5

//*
function FormatNumber(srcStr,nAfterDot){
//格式化小数 输出 带四舍五入
	//alert(srcStr);
	var srcStr,nAfterDot;
	var resultStr,nTen;
	var temp1
	srcStr = ""+srcStr+"";
	strLen = srcStr.length;
	dotPos = srcStr.indexOf(".",0);
	if (dotPos == -1){
		resultStr = srcStr+".";
		for (k=0;k<nAfterDot;k++){
			resultStr = resultStr+"0";
		}
		//if (resultStr=="NaN.00"){resultStr="0.00";}//如果得到的不是数值 则输出 空
		//alert("up"+resultStr);
		//return resultStr;
	}
	else{
		if ((strLen - dotPos - 1) >= nAfterDot){
			nAfter = dotPos + nAfterDot + 1;
			nTen =1;
			for(j=0;j<nAfterDot;j++){
				nTen = nTen*10;
			}
			resultStr = Math.round(parseFloat(srcStr)*nTen)/nTen;
			resultStr = resultStr+""
			if(resultStr.indexOf(".")==-1){
				resultStr+=".0"
					
			}
		}
		else{
			resultStr = srcStr;
			for (k=0;k<(nAfterDot - strLen + dotPos + 1);k++){
				resultStr = resultStr+"0";
			}
			//if (resultStr=="NaN.00"){resultStr="0.00";}//如果得到的不是数值 则输出 空
			//alert("down"+resultStr);
			//return resultStr;
		}
	}

	//必须补全0
	//if (resultStr=="NaN.00" || resultStr=="0" ){resultStr="0.00";}//如果得到的不是数值 则输出 空
	if (resultStr=="NaN.0" || resultStr==0 ){resultStr="0.0";}//如果得到的不是数值 则输出 空
	
	//return format_dotnum(resultStr,afterdot);
	
	
	return resultStr;
} 
//*/

//结束

function get_num(fieldname1,fieldname9,num){
//根据一项 循环 NUM次 计数这一项 并不要格式化输出到 fieldname9 返回值为 TRUE
// 统计 列
	var sum=0;
	for (i=0;i<num;i++){
		try{	//捕捉错误
			if (fieldname1(i).value!="") {sum=sum+1;}
		}catch(e){//说明他不是一个数珠
			if (fieldname1.value!="") {sum=sum+1;}
		}//捕捉结束
	}//循环结束
	fieldname9.value=sum;
	return sum;	
}


function get_row_total(fieldname1,fieldname2,fieldname9,num){	
//根据二项 循环 求 第三项的值 并格式化输出到 fieldname9 返回值为 第三项的累加值
// 求 sum 行
	var sum=0;
	var v=0;
	for (i=0;i<num;i++){		
		try{	//捕捉错误
			v1=fieldname1(i).value-0;
			v2=fieldname2(i).value-0;
			v=(v1*v2)/1000;
			if (v1!=0 && v2!=0){
				if (isNaN(v)){
					fieldname9(i).value="0.00";
				}
				else{
					//alert("i="+i+"|v1="+v1+"|v2="+v2+"|v="+v);
					fieldname9(i).value=FormatNumber(v,afterdot);
					fieldname9(i).value=(format_dotnum(fieldname9(i).value,afterdot));
					//alert("这一行="+fieldname9(i).value);
				}
				sum=parseFloat(fieldname9(i).value)+parseFloat(sum);
			}
			else{
				fieldname9(i).value="0.00";
			}
		}catch(e){//说明他不是一个数珠
			v1=fieldname1.value-0;
			v2=fieldname2.value-0;
			v=(v1*v2)/1000;
			if (v1!=0 && v2!=0){
				if (isNaN(v)){
					fieldname9.value="0.00";
				}
				fieldname9.value=FormatNumber(v,afterdot);
				fieldname9.value=(format_dotnum(fieldname9.value,afterdot));
				sum=parseFloat(fieldname9.value)+parseFloat(sum);
			}
			else{
				fieldname9.value="0.00";
			}
		}//捕捉结束
	}//循环结束

//*/
	return sum;	
}

function get_col_total(fieldname1,fieldname9,num){
//根据一项 循环 NUM次 累加这一项 并格式化输出到 fieldname9 返回值为 TRUE
// 求 sum 列
	var sum=0;
	for (i=0;i<num;i++){
		try{	//捕捉错误
			v=parseFloat(fieldname1(i).value);
		}catch(e){//说明他不是一个数珠
			v=parseFloat(fieldname1.value);
	
		}//捕捉结束
		if (!isNaN(v)) {sum=parseFloat(sum)+parseFloat(v);}
	

	}//循环结束
	
	//alert(sum);
	
	if (isNaN(sum)) {fieldname9.value=0;return 0;}
		else {fieldname9.value=FormatNumber(parseFloat(sum),afterdot);return FormatNumber(sum,afterdot);}
}

function get_col_total_count(fieldname1,fieldname9,num){
//根据一项 循环 NUM次 累加这一项 并格式化输出到 fieldname9 返回值为 TRUE
// 求 sum 列
// 返回不带小数点的SUM
	var sum=0;
	for (i=0;i<num;i++){
		try{	//捕捉错误
			v=fieldname1(i).value-0;
		}catch(e){//说明他不是一个数珠
			v=fieldname1.value-0;
		}//捕捉结束
		if (!isNaN(v)) {sum=sum+v;}
	
	}//循环结束
	if (isNaN(sum)) {fieldname9.value=0;return 0;}
		else {fieldname9.value=sum;return sum;}	
}

function compare_col(fieldname1,fieldname2,num,info1,info2){
//循环 num 次数 比较 fieldname1 和 fieldname2 当 fieldname2>fieldname1 是否跳出提示框 某行应 怎么样怎么样
// 返回值为 行数i           0 表示 全符合要求
	for (i=0;i<num;i++){
		try{	//捕捉错误
			v1=fieldname1(i).value-0;
			v2=fieldname2(i).value-0;
		}catch(e){//说明他不是一个数珠
			v1=fieldname1.value-0;
			v2=fieldname2.value-0;
		}//捕捉结束
		//if (!isNaN(v1) && !isNaN(v1) && v1!=0 && v2!=0){
		if (!isNaN(v1) && !isNaN(v1) && v2!=0){
			if (v2>v1){
				alert("您所输入的数值有错误！\n请校对  \""+info2+"\"   第 "+(i+1)+" 行！\n"+info1);
				return (i+1);
			}
		}
	}//循环结束
	return 0;
}

function get_max(num1,num2){
//返回 二数的 最大值
	if ((num1-0)>(num2-0)){return num1;}
	return num2;
}

function money_sum(){
//返回 课题经费预算表的 经费来源总和
	var money1=form1.p_money1.value-0;
	var money2=form1.p_money2.value-0;
	var money3=form1.p_money3.value-0;
	var money4=form1.p_money4.value-0;
	var money5=form1.p_money5.value-0;
	var money6=form1.p_money6.value-0;
	var money7=form1.p_money7.value-0;
	var money8=form1.p_money8.value-0;
	var money9=form1.p_money9.value-0;
	var money10=form1.p_money10.value-0;

	form1.p_money.value=money1+money2+money3+money4+money5+money6+money7+money8+money9+money10;
	return;
}

/*
2008-08-14 废弃 
请改用  check.js 中的 check_form_not_empty() 方法
function check_form1_null(){
//搜索表单内有没有空域
//返回 true 表示全部填写 没有空
	for(i=0;i<(form1.elements.length-1);i++){	//表单内容依次循环查找
		if(form1.elements[i].value=="" && !form1.elements[i].readonly){
			pagecontentmanageobj.markErrorElement(form1.elements[i],alert_befor_lock);
			//	alert(alert_befor_lock);
			//form1.elements[i].focus();
			return false;
		}//校验空结束
	}//循环结束 校验空结束
	
	
	return true;
}
*/

//2003－11－12 格式化数据成为 xxxxx.xx 小数点后面必须保留N 为位
//参数一表示 需要格式化的数值  参数二表示 需要 保留小数点后面几位

//未完成函数 功能限制 小数点后面2位
function format_dotnum(tt1,tt2){

	if (tt1=="/"){return "/";}

	//return tt1;
	var returnV="0.0";
	if (tt1.indexOf(".")=="-1"){//表示没有小数点
			if (tt1!=""){returnV=tt1+".0";	}
			else{returnV="";}
	}
	else{
		
		temp = tt1.split(".");

		returnV=tt1;
		for (var kk=0;kk<(parseInt(tt2)-parseInt(temp[1].length));kk++){
			returnV=returnV+"0";
		}
	}
	return returnV;
}


///////////////////////////////////


function initAd() {
//初始化 浮动层
document.all.AdLayer.style.posTop = -200;//设置onLoad事件激发以后，广告层相对于固定后的y方向位置
document.all.AdLayer.style.visibility = "visible"//设置层为可见
MoveLayer("AdLayer");//调用函数MoveLayer()
anchortotitle()


initInputClass()



}

function MoveLayer(layerName){
//移动浮动层
var x = 0;//浮动广告层固定于浏览器的x方向位置
var y = 0;//浮动广告层固定于浏览器的y方向位置
var diff = (document.body.scrollTop + y - document.all.AdLayer.style.posTop)*.40;
var y = document.body.scrollTop + y - diff;
eval("document.all." + layerName + ".style.posTop = y");
eval("document.all." + layerName + ".style.posLeft = x");//移动广告层
setTimeout("MoveLayer('AdLayer');", 20);//设置20毫秒后再调用函数MoveLayer()
}


function initFootLayer() {
//初始化 浮动层
document.all.FootLayer.style.posTop = -200;//设置onLoad事件激发以后，广告层相对于固定后的y方向位置
document.all.FootLayer.style.visibility = "visible"//设置层为可见
MoveFootLayer("FootLayer");//调用函数MoveFootLayer()
}

function MoveFootLayer(layerName){
//移动浮动层
var x = 0;//浮动广告层固定于浏览器的x方向位置
var y = window.document.documentElement.offsetHeight-55;//浮动广告层固定于浏览器的y方向位置
var diff = (document.body.scrollTop + y - document.all.FootLayer.style.posTop)*.40;
var y = document.body.scrollTop + y - diff;
eval("document.all." + layerName + ".style.posTop = y");
eval("document.all." + layerName + ".style.posLeft = x");//移动广告层
setTimeout("MoveFootLayer('FootLayer');", 20);//设置20毫秒后再调用函数MoveLayer()
}




///////////////
//类别显示
//函数名字
//function set_gosmallinfo(prevobj,thisobj,nextobj)
//function gosamll1(obj1)
//function gosamll2(obj1)
//function gosamll3(obj1)
//function gosamll4(obj1)
//function gosamll5(obj1)
//function gosamll6(obj1)
//readgosamll()
////////////////


function set_gosmallinfo(prevobj,thisobj,nextobj){
//传递三个参数 分别 代表 这个 SELECT 的 上一个 当前一个 下一个
	
	//清空  下一个 select 原来的 选择项
	for (m=nextobj.options.length-1;m>0;m--)
		{nextobj.options[m]=null ;}
	
	//赋予 通用的 select 选择项
	nextobj.options[0]=new Option("请选择小类",""); 
	nextobj.options[0].selected=true ;
	
	// 第一个没有 没有上一个 特殊处理	
	try{
		rv=prevobj[prevobj.selectedIndex-0].value;
	}
	catch(e){
		rv="";
	}
	form1.p_tag.value=rv;
	
	//如果用户选择了 “请选择小类” 则 p_tag 值为  上一个的值
	
	if (thisobj[thisobj.selectedIndex-0].value!="")	{
		form1.p_tag.value=thisobj[thisobj.selectedIndex-0].value;	
	}
			
	//返回上一个的 p_tag 主要目的 用于 从 下一个层次的数组 中 去 比较  相等的
	
	return form1.p_tag.value;
}



function gosamll1(obj1){
//改变大类的时候用
	UpClassCode=set_gosmallinfo(null,obj1,document.form1.s2);


	for (i=0,j=1;i<js_arr_class2[1].length;i++){	//J 用来标识 几个选择项 当为0 的时候为 没有下一项
		 //alert(js_arr_class2[0][i].substring(0,3));
		if (js_arr_class2[0][i].substring(0,3)==UpClassCode){//如果相等 则输出一个选择项
			form1.s2.options[j]=new Option(js_arr_class2[1][i],js_arr_class2[0][i]); 
			j++;
		}
	}


	if (j==1) {
		tag2.style.display="none";
	}
	else{
		tag2.style.display="";
		
	}
	//隐藏以后的小类
	tag3.style.display="none";
	tag4.style.display="none";
	tag5.style.display="none";
	tag6.style.display="none";
	
}

function gosamll2(obj1){

	UpClassCode=set_gosmallinfo(document.form1.s1,obj1,document.form1.s3);

	
	for (i=0,j=1;i<js_arr_class3[1].length;i++){	//J 用来标识 几个选择项 当为0 的时候为 没有下一项
		 //alert(js_arr_class2[0][i].substring(0,3));
		if (js_arr_class3[0][i].substring(0,7)==UpClassCode){//如果相等 则输出一个选择项
			form1.s3.options[j]=new Option(js_arr_class3[1][i],js_arr_class3[0][i]); 
			j++;
		}
	}
	

	if (j==1) {
		tag3.style.display="none";
	}
	else{
		tag3.style.display="";
	}
	//隐藏以后的小类
	tag4.style.display="none";
	tag5.style.display="none";
	tag6.style.display="none";
}

function gosamll3(obj1){

	UpClassCode=set_gosmallinfo(document.form1.s2,obj1,document.form1.s4);

	for (i=0,j=1;i<js_arr_class4[1].length;i++){	//J 用来标识 几个选择项 当为0 的时候为 没有下一项
		 //alert(js_arr_class2[0][i].substring(0,3));
		if (js_arr_class4[0][i].substring(0,11)==UpClassCode){//如果相等 则输出一个选择项
			form1.s4.options[j]=new Option(js_arr_class4[1][i],js_arr_class4[0][i]); 
			j++;
		}
	}

	if (j==1) {
		tag4.style.display="none";
	}
	else{
		tag4.style.display="";
	}
		//隐藏以后的小类
	tag5.style.display="none";
	tag6.style.display="none";
}

function gosamll4(obj1){

	UpClassCode=set_gosmallinfo(document.form1.s3,obj1,document.form1.s5);

	for (i=0,j=1;i<js_arr_class5[1].length;i++){	//J 用来标识 几个选择项 当为0 的时候为 没有下一项
		 //alert(js_arr_class2[0][i].substring(0,3));
		if (js_arr_class5[0][i].substring(0,15)==UpClassCode){//如果相等 则输出一个选择项
			form1.s5.options[j]=new Option(js_arr_class5[1][i],js_arr_class5[0][i]); 
			j++;
		}
	}

	if (j==1) {
		tag5.style.display="none";
	}
	else{
		tag5.style.display="";
	}
		//隐藏以后的小类
	tag6.style.display="none";
}

function gosamll5(obj1){

	UpClassCode=set_gosmallinfo(document.form1.s4,obj1,document.form1.s6);

	for (i=0,j=1;i<js_arr_class6[1].length;i++){	//J 用来标识 几个选择项 当为0 的时候为 没有下一项
		 //alert(js_arr_class2[0][i].substring(0,3));
		if (js_arr_class6[0][i].substring(0,19)==UpClassCode){//如果相等 则输出一个选择项
			form1.s6.options[j]=new Option(js_arr_class6[1][i],js_arr_class6[0][i]); 
			j++;
		}
	}

	if (j==1) {
		tag6.style.display="none";
	}
	else{
		tag6.style.display="";
	}

}

function gosamll6(obj1){
	
//最后一个比较特殊 需要不同对待

	rv=form1.s5[form1.s5.selectedIndex-0].value;
	form1.p_tag.value=rv;
	
	if (obj1[obj1.selectedIndex-0].value!="")	{
		form1.p_tag.value=obj1[obj1.selectedIndex-0].value;	
	}

}

function readgosamll(){
	//
	vv=form1.p_tag.value;
	//alert(form1.p_tag.value);
	for (i=1;i<form1.s1.length;i++){
		if (form1.s1.options[i].value==vv.substring(0,3)){
			form1.s1.options[i].selected=true;
		}
	}
	gosamll1(form1.s1);	
	//alert(form1.s1.length)
	
	
	if (vv.length>3){
		for (i=1;i<form1.s2.length;i++){
			if (form1.s2.options[i].value==vv.substring(0,7)){
				form1.s2.options[i].selected=true;
			}
		}
		gosamll2(form1.s2);
	}
	
	if (vv.length>7){
		for (i=1;i<form1.s3.length;i++){
			if (form1.s3.options[i].value==vv.substring(0,11)){
				form1.s3.options[i].selected=true;
			}
		}
		gosamll3(form1.s3);
	}
	
	if (vv.length>11){
		for (i=1;i<form1.s4.length;i++){
			if (form1.s4.options[i].value==vv.substring(0,15)){
				form1.s4.options[i].selected=true;
			}
		}
		gosamll4(form1.s4);
	}
	
	if (vv.length>15){
		for (i=1;i<form1.s5.length;i++){
			if (form1.s5.options[i].value==vv.substring(0,19)){
				form1.s5.options[i].selected=true;
			}
		}
		gosamll5(form1.s5);
	}
	
	if (vv.length>19){
		for (i=1;i<form1.s6.length;i++){
			if (form1.s6.options[i].value==vv.substring(0,23)){
				form1.s6.options[i].selected=true;
			}
		}
		gosamll6(form1.s6);
	}		
		
}


////////////////////////////////////



//2004-5-20增加 校验 form1的 身份证

function check_form1peid(){

	var i=0;
//	alert(form1.pe_id(0).value)

	//课题负责人
	//alert(form1.pe_id1.length);
	try{
		for (i=0;i<form1.pe_id1.length || typeof(form1.pe_id1.length)=="undefined" ;i++ ){
			if (form1.pe_id1[i].value=="填写身份证"){
				alert("请填写课题责任人的身份证！");
				return false;
			}
		}
	}
	catch(e){
			
			if (typeof(form1.pe_id1)!="undefined" && form1.pe_id1.value=="填写身份证"){
				alert("请填写课题责任人的身份证！");
				return false;
			}

	}

	//课题高级研究人员
	//alert(form1.pe_id2.value);
	try{
		for (i=0;i<form1.pe_id2.length || typeof(form1.pe_id2.length)=="undefined" ;i++ ){
			if (form1.pe_id2[i].value=="填写身份证"){
				alert("请填写课题高级研究人员的身份证！");
				return false;
			}
		}
	}
	catch(e){
		
			if (typeof(form1.pe_id2)!="undefined" && form1.pe_id2.value=="填写身份证"){
				alert("请填写课题高级研究人员的身份证！");
				return false;
			}
	}


	//课题参与人员
	//alert(form1.pe_id3.value);
	try{
		for (i=0;i<form1.pe_id3.length || typeof(form1.pe_id3.length)=="undefined" ;i++ ){
			if (form1.pe_id3[i].value=="填写身份证"){
				alert("请填写课题参与人员的身份证！");
				return false;
			}
		}
	}
	catch(e){
		
			if (typeof(form1.pe_id3)!="undefined" && form1.pe_id3.value=="填写身份证"){
				alert("请填写课题参与人员的身份证！");
				return false;
			}
	}


	//alert("ok");
	return true;
}
function check_bedate(vv){
	flag=true;//标志表示正确
	if (form1.p_bdate.value!="" && form1.p_edate.value!=""){
		d1=form1.p_bdate.value;	//开始日期
		d2=form1.p_edate.value;	//结束日期
		s1=d1.split("-");
		s2=d2.split("-");

		syear1=new Number(s1[0]);
		syear2=new Number(s2[0]);
		smonth1=new Number(s1[1]);
		smonth2=new Number(s2[1]);
		sday1=new Number(s1[2]);
		sday2=new Number(s2[2]);

		if (syear1!=syear2){
			//执行判断
			if (syear1>syear2) flag=false;
			if (syear2==1900) flag=true;
		}
		else{	//相同的年份
			if (smonth1!=smonth2){
				//执行判断
				if (smonth1>smonth2) flag=false;
			}
			else{	//相同的年月
				if (sday1!=sday2){
					//执行判断
					if (sday1>sday2) flag=false;
				}
				else{//相同的年月日
					flag=false;
				}
			}//第二个else
			
		}//第一个ELSE
	}

	if (!flag){
		alert("课题开始日期必须小于课题结束日期！");
		vv.value="";
		vv.select();
		vv.focus();
		return false;
	}
	return true;
}
function checkaccount(vv){
	var pattern_account=/^[-0-9]{0,}$/;
	xx=vv.value;
	if (""!=xx){
		if (!pattern_account.test(xx)){
			alert ("请用正确的银行帐号！");
			vv.value="";vv.focus();return;
		}
	}
}
function checkgtdate(){
	var flag=true;//标志表示正确
	if (form1.p_bdate.value!=""){
		d1=form1.p_bdate.value;	//开始日期
		d2=new Date();
		s1=d1.split("-");
		//s2=d2.split("-");
		
		//alert(d2.getDate());

		syear1=parseInt(s1[0]);
		//syear2=parseInt(s2[0]);
		syear2=d2.getYear();
		
		smonth1=parseInt(s1[1]);
		//smonth2=parseInt(s2[1]);
		smonth2=d2.getMonth()+1;
		//alert(smonth2)
		
		sday1=parseInt(s1[2]);
		//sday2=parseInt(s2[2]);
		sday2=d2.getDate();

		if (syear1!=syear2){
			//执行判断
			if (syear1<syear2) flag=false;
			//if (syear2==1900) flag=true;
		}
		else{	//相同的年份
			if (smonth1!=smonth2){
				//执行判断
				if (smonth1<smonth2) flag=false;
			}
		}//第一个ELSE
	}
	else{
		alert("请填写课题开始日期!");
		return;
	}

	if (!flag){
		alert("建议课题开始日期为"+syear2+"年"+smonth2+"月1日以后的日期！");
		//vv.select();
		//vv.focus();
		return false;
	}
	return true;
}

<!--


function isDate(vv){	//校验正确的 日期 格式为  1900-1-1 或者 1900/1/1  vv为一个标准格式的日期
	var pattern_date=/^\d{4}[-－]\d{1,2}[-－]\d{1,2}$/;
	xx=vv;
	if (""!=xx)	{
		if (!pattern_date.test(xx)){
			//alert ("请用正确的格式填写日期！格式为:2002-8-02");
			//vv.value="";vv.focus();return;
			return false;
		}//格式合法性校验结束
	
	if (xx.indexOf("-")!=-1){temp=xx.split("-");}
	if (xx.indexOf("/")!=-1){temp=xx.split("/");}
	if (xx.indexOf("－")!=-1){temp=xx.split("－");}	

	switch(temp[1]-0){
		case 1:case 3:case 5:case 7:case 8:case 10:case 12:yue2=31;break;
		case 2:yue2=28;break;
		case 4:case 6:case 9:case 11:yue2=30;break;
	}
	if ((temp[0]%4==0&&temp[0]%100!=0)||(temp[0]%100==0&&temp[0]%400==0)) if (temp[1]==2) yue2=29;//是闰年

		if ((temp[1]>12||temp[1]<1)||(temp[2]>yue2||temp[2]<1)||temp[0]<1900 ||temp[0]>2099){
			//alert ("您所填写的日期不正确，请重新填写！");
			//vv.value="";vv.focus();return;
			return false;
		}	//月日合法性校验结束
	}	//非空结束
	//vv.value=xx.replace("－","-").replace("－","-"); //替换成为标准格式
	return true;
}
function getBirthDateAndSexByIdNumber(idNumberElement,sexElement,birthDateElement){

	if(checkIdNumber(idNumberElement.value)){
		if(sexElement!=null){
			var sexvalue = getSexFromIdNumber(idNumberElement.value);
			
			var optionarray = sexElement.options
			for(var i=0;i<optionarray.length;i++){
				if(optionarray[i].value==sexvalue){
						optionarray[i].selected = true
				}	
			}
			
		}

		if(birthDateElement!=null)
		birthDateElement.value = getDateFromIdNumber(idNumberElement.value);
	}
}
function getPinfoByIdNumber(idNumberElement){
	var returnvalues = [];
	returnvalues[0] = getSexFromIdNumber(idNumberElement.value);
	returnvalues[1] = getDateFromIdNumber(idNumberElement.value);
	
	return returnvalues;
}


function checkIdNumber(vv){

	if (getDateFromIdNumber(vv)=="1900-1-1"){	
		return false;
	}
	else{
		return true;
	}	
}  


function isIdNumberEqualBirthDay(){

	if (document.forms[0].idType.value=="01"){	
		var arr1 = (getDateFromIdNumber(document.forms[0].idNumber.value)).split("-");
		var arr2 = (document.forms[0].birthDate.value).split("-");	
		var date1=new Date(arr1[0],parseInt(arr1[1].replace(/^0/,""),10) - 1,arr1[2])+"";
		var date2=new Date(arr2[0],parseInt(arr2[1].replace(/^0/,""),10) - 1,arr2[2])+"";	
		//alert(date1+"===>"+date2);
		if (date1!=date2){
			alert("您输入的出生日期与身份证中的出生日期信息不一致!");
		}	
			
	}	

}

function getSexFromIdNumber(number){
	
	if (number.length==15){
	
		sexnumber = number.substring(14,15)
		
	}
	else if (number.length==18){
		sexnumber = number.substring(16,17)

	}
	
	returnvalue =  sexnumber%2==0?"女":"男"
	
	return returnvalue
	
}

function getDateFromIdNumber(vv){

	var number=vv;
	var errorDate="1900-1-1";
	var date1="";
	var byear="";
	var bmonth="";
	var bday="";		
	if (number.length=="15"){
		byear="19"+number.substring(6,8);
		bmonth=number.substring(8,10);
		bday=number.substring(10,12);
	}
	else if (number.length=="18"){
		byear=number.substring(6,10);
		bmonth=number.substring(10,12);
		bday=number.substring(12,14);
	}
	else {
		return errorDate;
	}		
	date1=byear+"-"+bmonth+"-"+bday;
	
	if (isDate(date1)){ 
		return date1;
	}
	else{
		return errorDate;
	}

}

function getrowsumXtimesYdivide1000_2014new(element1,element2,element3,element4){//累加控件名1,累加控件名2,值输出控件名
	//var element1 = document.getElementsByName(e1)
	//var element2 = document.getElementsByName(e2)
	//var element3 = document.getElementsByName(e3)
		if(element1==null){
			return false
		
	}
	if(element1.length){//是否为数组
		for(var i=0;i<element1.length;i++){
				if(element4[i].value!="5"){
			if ((element1[i].value!="/")||(element2[i].value !="/")){				
				if((element1[i].value =="")||(element2[i].value =="")){
					element3[i].value = "0.0"
				}else{
	
					element3[i].value = FormatNumber((parseFloat(element1[i].value))*(parseFloat(element2[i].value))/1000,afterdot)
					
				}
			}
		}
		}
	}else{//只有一个
	
			if((element1.value =="")||(element2.value =="")){
				element3.value = "0.0"
			}else{


				element3.value = FormatNumber((parseFloat(element1.value))*(parseFloat(element2.value))/1000,afterdot)

			}
	
	}
	

}



function getrowsumXtimesYdivide1000(element1,element2,element3){//累加控件名1,累加控件名2,值输出控件名
	//var element1 = document.getElementsByName(e1)
	//var element2 = document.getElementsByName(e2)
	//var element3 = document.getElementsByName(e3)
		if(element1==null){
			return false
		
	}
	if(element1.length){//是否为数组
		for(var i=0;i<element1.length;i++){
				
			if ((element1[i].value!="/")||(element2[i].value !="/")){				
				if((element1[i].value =="")||(element2[i].value =="")){
					element3[i].value = "0.0"
				}else{
	
					element3[i].value = FormatNumber((parseFloat(element1[i].value))*(parseFloat(element2[i].value))/1000,afterdot)
					
				}
			}
		}
		
	}else{//只有一个
	
			if((element1.value =="")||(element2.value =="")){
				element3.value = "0.0"
			}else{


				element3.value = FormatNumber((parseFloat(element1.value))*(parseFloat(element2.value))/1000,afterdot)

			}
	
	}
	

}

//function getParentNodeOfElement(parentnodename,obj){
//	if(obj.tagName.toUpperCase() == parentnodename.toUpperCase()){
//		return 	obj
//	}else{
//		obj = obj.parentNode
//		getParentNodeOFElement(parentnodename,obj)
//	}
//}

function compare_col2(fieldname0,fieldname1,fieldname2,num,info1,info2){
	
//循环 num 次数 比较 fieldname1 和 fieldname2 当 fieldname2>fieldname1 是否跳出提示框 某行应 怎么样怎么样
// 返回值为 行数i           0 表示 全符合要求
	for (i=0;i<num;i++)
	{
		try
		{	//捕捉错误
		    v0=fieldname0(i).value-0;
			v1=fieldname1(i).value-0;
			v2=fieldname2(i).value-0;
			
		}catch(e)
		{//说明他不是一个数珠
		    v0=fieldname0.value-0;
			v1=fieldname1.value-0;
			v2=fieldname2.value-0;
		}//捕捉结束
	//	alert("--fieldname0["+i+"]--"+fieldname0(i).value+"---fieldname1["+i+"]---"+fieldname1(i).value+"---fieldname2["+i+"]---"+fieldname2(i).value);
		//if (!isNaN(v1) && !isNaN(v1) && v1!=0 && v2!=0){
		if (!isNaN(v1) && !isNaN(v1) && v2!=0)
		{
			if (v2!=v1){
				return false;
			}
		}
	}//循环结束
	return true;
}

function compare_col3(fieldname0,fieldname1,fieldname2,num,info1,info2){
	
//循环 num 次数 比较 fieldname1 和 fieldname2 当 fieldname2>fieldname1 是否跳出提示框 某行应 怎么样怎么样
// 返回值为 行数i           0 表示 全符合要求
	for (i=0;i<num;i++)
	{
		try
		{	//捕捉错误
		    v0=fieldname0(i).value-0;
			v1=fieldname1(i).value-0;
			v2=fieldname2(i).value-0;
			
		}catch(e)
		{//说明他不是一个数珠
		    v0=fieldname0.value-0;
			v1=fieldname1.value-0;
			v2=fieldname2.value-0;
		}//捕捉结束
	//	alert("--fieldname0["+i+"]--"+fieldname0(i).value+"---fieldname1["+i+"]---"+fieldname1(i).value+"---fieldname2["+i+"]---"+fieldname2(i).value);
		//if (!isNaN(v1) && !isNaN(v1) && v1!=0 && v2!=0){
		if (!isNaN(v0) && !isNaN(v0) && v2!=0)
		{
			if(v0>=300000)
			{
			   if (v2>v1)
			   {
				  return 0;
			   }
			}
			else
			  {
			     if (v2!=v1)
			   {
				  return 1;
			   }
			  }
		}
	}//循环结束
	return 2;
}

/*
将字符转换为数字
*/
function chg2dbl(vv){
	if (vv=="" || isNaN(vv) ){
		return 0;
	}
	else{
		return parseFloat(vv);
	}
}
//-->





function formElementFocus(focuselement){
	if(focuselement!=null){
			focuselement.focus()
			return;
		
	}
	for (var i=0; i < document.forms[0].elements.length; i++) {
            var oField = document.forms[0].elements[i];
            if (oField.type != "hidden" && oField.type != "checkbox") {
                oField.focus();
                return;
            }
     }
    
}
function donothing(){
	alert("donothing")
}
function setFormDisable(forms){

			
			for (var i=0; i < forms.elements.length; i++) {
           		if(forms.elements[i].type=="checkbox" || forms.elements[i].type=="radio" || forms.elements[i].type=="select-one" || forms.elements[i].type=="select-multiple" ){
					//alert( forms.elements[i].id + " " + forms.elements[i].type)
					forms.elements[i].disabled = true
				}
				else {
					
					forms.elements[i].readOnly = true
					if(forms.elements[i].className =="inputtexttypedefaultwidth")					
					forms.elements[i].className  = "inputtexttypedefaultwidthreadonly";



						
				}
		
            }
			var inputs = document.getElementsByTagName("input")	
			for(var i=0;i<inputs.length;i++){
				if(inputs[i].type=="text"){
					if(inputs[i].onfocus!=null){
						inputs[i].onfocus = function(){return false}
					}
					if(inputs[i].onclick!=null){
						inputs[i].onclick = function(){return false}
					}
					if(inputs[i].onblur!=null){
						inputs[i].onblur = function(){return false}
					}
					if(inputs[i].onchange!=null){
						inputs[i].onchange = function(){return false}
					}
				}
			}
     
		

}

function setPageDisable(){
	pageForms = document.forms
	for(var i=0;i<pageForms.length;i++){
		setFormDisable(pageForms[i])
		
	}
	
	buttons = document.getElementsByTagName("button")
	for(var i=0;i<buttons.length;i++){
		
			if(buttons[i].getAttribute("nodisabled")==null){
				buttons[i].disabled = true	
			}
			
			
	}
	tooltipenableparam = false
	
	
}

/*
重置 已经 mark Error 的对象
*/
function reset_form_error_mark(){
	nowObj= event.srcElement;	
	if (nowObj.style.backgroundColor.toUpperCase() == pagecontentmanageobj.errorcolor.toUpperCase() ){
		restelementmousemovmentevent(nowObj);
	}
}

/*
打开窗口 
*/
function openWin(url,name,state){

  if(name=="" || name==null){
    name="newWin";
  }
  if(state=="" || state==null){
    state="width=550,height=300,left=100,top=50";
  }
 window.open(url, name, "toolbar=no,resizable=yes,statebar=yes,scrollbars=yes,"+state);
  //openers(opennedWindows);
  
}

function removeallspace(str) {
	 return str.replace(/[\s\u3000]/g, "");
}


function anchortotitle(){
	document.location.hash='titlehash';

}
function setElementRorD(obj){
	if(obj.type=="radio" || obj.type=="checkbox" ||  obj.type=="checkbox" || obj.type=="select-multiple" || obj.type=="select-one") {
			obj.disabled = true
	}	
	else{
		
		obj.readOnly = true	
	}
	
}
function setElementsRorD(str){
	var strarray = 	str.split(",")
	
	for(i=0;i<strarray.length;i++){
		var obj = eval("document.all."+strarray[i])
		if(obj.length){
			for(j=0;j<obj.length;j++){
				setElementRorD(obj[j])
			}
			
			
		}else{
			
			setElementRorD(obj)
			
		}
	}
	
}
//function initInputClass(){
//	var inputs = document.getElementsByTagName("input")	
//	for(var i=0;i<inputs.length;i++){
//		if((inputs[i].type)&&(inputs[i].className==""||inputs[i].className==null))
//		if(inputs[i].type=="text"||inputs[i].type=="file"||inputs[i].type=="password"){
//			
//			if(inputs[i].readOnly){
//				inputs[i].className = "inputtextreadonly"	
//			}else{
//				inputs[i].className = "inputtexttype"	
//			}
//			
//			
//		}else{
//			inputs[i].className = "inputothertype"
//			
//		}	
//		
//	}
//	
//}

function initInputClass() {
    var inputs = document.getElementsByTagName("input");
    for (var i = 0; i < inputs.length; i++) 
    {
        if ((inputs[i].type) && (inputs[i].className == "" || inputs[i].className == null)) { 
            if (inputs[i].type == "text" || inputs[i].type == "file" || inputs[i].type == "password") {
				//alert('ok')
                if (inputs[i].readOnly) {
                    inputs[i].className = "inputtextreadonly"
                }
                else {
                    inputs[i].className = "inputtexttype"
                }
            } else if (inputs[i].type == "button" || inputs[i].type == "submit") {
            	//alert('okb')
                inputs[i].className = "inputbuttontype"
            }
            else {
                inputs[i].className = "inputothertype"
            }
        }
    }

}


function formatTextWrap(obj){

	var reg=/_ssticbk__ssticbk_/g; 
	obj.value = obj.value.replace(/\r\n|\n/g,'_ssticbk_')
	if(reg.test(obj.value)){
		obj.value = obj.value.replace(/_ssticbk__ssticbk_/g,'\n')
		obj.value = obj.value.replace(/_ssticbk_/g,'\n')
		formatTextWrap(obj)
	}else{
		obj.value = obj.value.replace(/_ssticbk_/g,'\n')

	}
	
	
}
function formatAllTextArea(){

	var textareas = document.getElementsByTagName("textarea")
	var	textareaslength = textareas.length
	//alert("textareaslength  "+textareaslength)
	for(var i=0;i<textareaslength;i++){
		
		formatTextWrap(textareas[i])
		
		
	}
	

}
function ssticformsubmit(event) { 
  var target = event ? event.target : this;  

  formatAllTextArea()
  this._submit();
}

function formatloadinit(){
	var formsarray = document.forms
	var formlength = document.forms.length
	for(var i=0;i<formlength;i++){
		formsarray[i]._submit = formsarray[i].submit
		formsarray[i].submit = ssticformsubmit 
	}
}


function getelementarray(elementobj){
	if(elementobj!=null){
	
		if(elementobj.length){
			return 	elementobj
			
		}else{
			
			var elementarray = new Array()	
			elementarray[0] = elementobj
			return elementarray
		}
	}else{
		return 	new Array(0)	
	}
	
}


