/*
| JavaScript模拟HashTable对象
|-------------------------------------------------------------------------------
| 基本类似于Java的HashTable
|
|
*/

function JSHastable(){
	this.HashContainer  = new Array();
	this.IdexContainer = new Array();
	this.valueArray  = new Array(0);
	this.keyArray = new Array(0);
	this.put = put;
	this.get = get;
	this.remove = remove;
	this.isEmpty = isEmpty;
	this.values = values;
	this.keys = keys;
	this.size = size;
	this.subArray = subArray;
	this.load = load;
	this.showKeys = showKeys;
	this.showValues = showValues;
}
function showKeys(){
	alert(this.keyArray.join(";"));
}
function showValues(){
alert(this.valueArray.join(";"));
}
function put(key,value){

	this.HashContainer[key]  = value;
	this.IdexContainer[key] = this.valueArray.length;
	this.valueArray[this.valueArray.length] = value;
	this.keyArray[this.keyArray.length] = key;

	return this;
}
function get(key){
	return this.HashContainer[key];
}
function remove(key){
	if(this.HashContainer[key] != null){

		this.valueArray = subArray(this.valueArray,this.IdexContainer[key]);
		this.keyArray = subArray(this.keyArray,this.IdexContainer[key]);
		this.HashContainer[key] = null;
		this.IdexContainer[key] = null;
	}
	return this;
}
function isEmpty(){
	return ((this.valueArray.length == 0)?true:false);
}
function values(){
	return this.valueArray;
}
function keys(){
	return this.keyArray;
}
function size(){
	return this.valueArray.length;
}
function subArray(array,index){

	var arraytemp = new Array(0);
	for(var i=0;i<array.length;i++){
		if(i==index){
			continue;
		}
		else{
			arraytemp[arraytemp.length] = array[i];
		}
	}
	array = arraytemp;

	return array;



}
function load(str){
	var keyValues = str.split(",");
	for(var i=0;i<keyValues.length;i++){
		var keyvalue = keyValues[i];
		var key = keyvalue.split("=")[0];
		var value = keyvalue.split("=")[1];
		this.put(key,value);
	}
}

